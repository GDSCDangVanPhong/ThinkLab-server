name: Java CI/CD with Maven to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/server-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      JAR_NAME: server-0.0.1-SNAPSHOT.jar

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

          echo "ðŸ“¦ Copying JAR to EC2..."
          scp $JAR_NAME $EC2_USER@$EC2_HOST:/home/$EC2_USER/$JAR_NAME

          echo "ðŸš€ Restarting Spring Boot app on EC2..."
          ssh $EC2_USER@$EC2_HOST "
            # Kill old process
            pkill -f 'java -jar' || true

            # Start new one with nohup
            nohup java -jar /home/$EC2_USER/$JAR_NAME > ~/app.log 2>&1 &
            echo 'âœ… App restarted with nohup. Check ~/app.log for logs.'
          "
